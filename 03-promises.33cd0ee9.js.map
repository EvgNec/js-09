{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAsDA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IACrBL,EACII,EAAQ,C,SAACN,E,SAAUC,IAEnBM,EAAO,C,SAACP,E,SAAUC,K,EA1DrB,CACXO,SAAUC,SAASC,cAAc,qBACjCC,QAASF,SAASC,cAAc,oBAChCE,UAAWH,SAASC,cAAc,sBACpCG,KAAMJ,SAASC,cAAc,WAGxBG,KAAKC,iBAAiB,UAAWC,IAClCA,EAAEC,iBACJ,MAAMH,EAAOE,EAAEE,cACf,IAAIC,GAASL,EAAY,MAAEM,MAC3B,MAAMC,GAAUP,EAAa,OAAEM,MACzBE,GAAQR,EAAW,KAAEM,MAC3B,IAAIG,EAAW,EAiBd,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAAG,CAClCD,EAAWC,EACX,MAAMC,EAAaN,EACJA,GAASG,EAExBtB,EAAcuB,EAAUE,GACrBC,MAAK,EAACzB,SAAEA,EAAQC,SAAEA,MAEjByB,YAAW,KACTC,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAa,GAC1EA,EAAS,IAGb6B,OAAM,EAAC9B,SAAEA,EAAQC,SAAEA,MAClByB,YAAW,KACTC,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,MAAa,GACvEA,EAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayInp: document.querySelector(\"input[name=delay]\"),\n  stepInp: document.querySelector(\"input[name=step]\"),\n  amountInp: document.querySelector(\"input[name=amount]\"),\nform: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', (e) => {\n    e.preventDefault();\n  const form = e.currentTarget\n  let delay = +form['delay'].value\n  const amount = +form['amount'].value\n  const step = +form['step'].value\n  let position = 0;\n// for (let i = 0; i  < amount; i++) {\n\n//   position += 1;\n//  const firstDelay = position\n//   createPromise(position, delay)\n//     .then(() => {\n//       setTimeout(() => {\n//             Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//           }, delay)})\n//     .catch(() => {\n//       setTimeout(() => {\n//             Notiflix.Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n//           }, delay)})\n//   delay += step;\n  \n// }\n   for (let i = 1; i <= amount; i += 1) {\n      position = i\n      const firstDelay = delay\n      let newDelay = delay += step\n\n      createPromise(position, firstDelay, newDelay)\n        .then(({ position, newDelay }) => {\n\n          setTimeout(() => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${newDelay}ms`);\n          }, newDelay)\n        })\n\n        .catch(({ position, newDelay }) => {\n          setTimeout(() => {\n            Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${newDelay}ms`);\n          }, newDelay)\n        })\n    }\n\n})\n\nfunction createPromise(position, newDelay) {\n  const shouldResolve = Math.random() > 0.5;\n    return new Promise((resolve, reject) => {\n        if (shouldResolve) {\n         return resolve({position, newDelay})\n        } else {\n         return reject({position, newDelay})\n        }\n  })\n}\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","newDelay","shouldResolve","Math","random","Promise","resolve","reject","delayInp","document","querySelector","stepInp","amountInp","form","addEventListener","e","preventDefault","currentTarget","delay","value","amount","step","position1","i","firstDelay","then","setTimeout","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.33cd0ee9.js.map"}