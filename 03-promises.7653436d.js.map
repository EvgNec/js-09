{"mappings":"YAyBA,IAAuBA,KAKT,EAJPC,MAAM,sCAAyCC,OAAHF,IAAMG,MAAK,SAAAC,G,OAAKA,EAAEC,M,KAIpDF,MAEjB,SAAwBG,GACtBC,QAAQC,IAAI,UAAWF,E,IAHaG,OAMtC,SAAsBC,GAAOH,QAAQC,IAAIE,E,IAMzCH,QAAQC,IAAI,aAGZ,IAAMG,EANS,CACb,OAAQ,OAAQ,QAAS,OAAO,SAKVC,KAAI,SAAAC,G,OAO5B,SAAaA,GACX,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAOmBC,EAAKC,EAPlBC,GAOaF,EAPQ,IAOHC,EAPS,KAQ5BE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,GAAOA,IAP9CM,YAAW,WACTR,EAAQ,CAAEF,QAAOM,Q,GAChBA,E,IAZ8BK,CAAIX,E,IAEzCC,QAAQW,KAAKd,GAAUR,MAAK,SAAAuB,G,OAAKnB,QAAQC,IAAI,eAAgBkB,E,IAC7DZ,QAAQW,KAAKd,GAAUR,MAAK,SAAAwB,G,IAAGd,EAAKc,EAALd,MAAOM,EAAIQ,EAAJR,K,OAAWZ,QAAQC,IAAI,eAAgCN,OAAjBW,EAAM,aAAgBX,OAALiB,G,IAE7FL,QAAQc,IAAIjB,GAAUR,MAAK,SAAAuB,G,OAAKA,EAAEd,KAAI,SAAAe,G,IAAGd,EAAKc,EAALd,MAAOM,EAAIQ,EAAJR,K,OAAWZ,QAAQC,IAAI,eAAgCN,OAAjBW,EAAM,aAAgBX,OAALiB,G","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//--  return new Promise(function (resolve, reject) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//-- resolve('good');\n//   } else {\n//     // Reject\n//-- reject('bad');\n//   }\n    // }\n  //--});\n\n  //-- createPromise(1, 1000)\n  //--.then(result => console.log(result))\n  //--.catch(err => console.log(err))\n  \n  \n// const fetchPockemon = (id, onSuccess, onErrror) => {\n// fetch(`https://pokeapi.co./api/v2/pokemon/${id}`)\n//   .then(r => r.json())\n//   .then(pokemon => { onFetchSuccess(pokemon) })\n//   .catch(error => { onFetchError(err) });\n// }\n\nconst fetchPockemon = (id) => {\nreturn fetch(`https://pokeapi.co./api/v2/pokemon/${id}`).then(r => r.json())\n}\n\n// fetchPockemon(2, onFetchSuccess, onFetchError);\nfetchPockemon(2).then(onFetchSuccess).catch(onFetchError);\n\nfunction onFetchSuccess(pokemon) {\n  console.log(\"pokemon\", pokemon);  \n};\n\nfunction onFetchError(err) { console.log(err); };\n\n\nconst horses = [\n  'Rast', 'West', 'First', 'Last','Lucky'\n]\nconsole.log('Start RUN');\n\n// run('Test').then(x => console.log(x));\nconst promises = horses.map(horse => run(horse));\n\nPromise.race(promises).then(x => console.log('Fast horses ', x));\nPromise.race(promises).then(({ horse, time }) => console.log(`Fast horses ${horse} it time ${time}`));\n\nPromise.all(promises).then(x => x.map(({ horse, time }) => console.log(`Name horses ${horse} it time ${time}`)));\n\nfunction run(horse) {\n  return new Promise((resolve, reject) => {\n    const time = getRandomTime(2000, 3500);\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n    })\n  }\n\nfunction getRandomTime(min, max) { \n  return Math.round(Math.random() * (max - min) + min);\n}"],"names":["id","fetch","concat","then","r","json","pokemon","console","log","catch","err","$ce04d3a99e08e73b$var$promises","map","horse","Promise","resolve","reject","min","max","time","Math","round","random","setTimeout","$ce04d3a99e08e73b$var$run","race","x","param","all"],"version":3,"file":"03-promises.7653436d.js.map"}