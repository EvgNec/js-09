{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,OAAIL,EACKI,EAAQ,CAAEN,WAAUC,aAEpBM,EAAO,CAAEP,WAAUC,Y,KA3CnB,CACXO,SAAUC,SAASC,cAAc,qBACjCC,QAASF,SAASC,cAAc,oBAChCE,UAAWH,SAASC,cAAc,sBAClCG,KAAMJ,SAASC,cAAc,WAG1BG,KAAKC,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAMF,IALA,IAAMH,EAAOE,EAAEE,cACXC,GAASL,EAAY,MAAEM,MACrBC,GAAUP,EAAa,OAAEM,MACzBE,GAAQR,EAAW,KAAEM,MACvBG,EAAW,EACNC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAC/BC,QAAQC,IAAI,QAASP,GAErB,IAAMQ,EAAaR,EACHA,GAASG,EACzBtB,EAHAuB,GAAY,EAGYI,GACrBC,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAQ2B,EAAR3B,SACjB4B,YAAW,WACTC,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfjC,EAAS,QAAeiC,OAAThC,EAAS,M,GAElDA,E,IAEJiC,OAAM,SAAAN,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAQ2B,EAAR3B,SAClB4B,YAAW,WACTC,EAAAjC,GAASkC,OAAOC,QACd,sBAAqCC,OAAfjC,EAAS,QAAeiC,OAAThC,EAAS,M,GAE/CA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayInp: document.querySelector('input[name=delay]'),\n  stepInp: document.querySelector('input[name=step]'),\n  amountInp: document.querySelector('input[name=amount]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  const form = e.currentTarget;\n  let delay = +form['delay'].value;\n  const amount = +form['amount'].value;\n  const step = +form['step'].value;\n  let position = 0;\n  for (let i = 0; i < amount; i++) {\n    console.log('delay', delay);\n    position += 1;\n    const firstDelay = delay;\n    let newDelay = (delay += step);\n    createPromise(position, firstDelay, newDelay)\n      .then(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      })\n      .catch(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `❌ Rejected promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      });\n  }\n});\n\nfunction createPromise(position, newDelay) {\n  const shouldResolve = Math.random() > 0.5;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, newDelay });\n    } else {\n      return reject({ position, newDelay });\n    }\n  });\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","newDelay","shouldResolve","Math","random","Promise","resolve","reject","delayInp","document","querySelector","stepInp","amountInp","form","addEventListener","e","preventDefault","currentTarget","delay","value","amount","step","position1","i","console","log","firstDelay","then","param","setTimeout","$parcel$interopDefault","Notify","success","concat","catch"],"version":3,"file":"03-promises.5e611efb.js.map"}